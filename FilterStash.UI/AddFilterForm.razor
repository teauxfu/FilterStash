@using System.ComponentModel.DataAnnotations
@using FilterStash.Services
@using System.IO.Compression

<style>
    form {
        border: 1px solid grey;
        border-radius: .5rem;
        padding-inline: 15px;
    }

    .form-inputs {
        display: flex;
        flex-direction: column;
        gap: 3px;
    }

        .form-inputs label {
            display: flex;
            flex-direction: column;
        }

    .form-buttons {
        display: flex;
        gap: 3px;
    }

    .upload {
        border: 5px dashed slategray;
        padding: 25px;
    }

</style>

<Acrylic BackgroundRgba="rgba(255,255,255,.3)">
    @if (EditContext is null)
    {
        <p>Loading...</p>
    }
    else
    {
        <EditForm EditContext=@EditContext OnValidSubmit=@HandleValidSubmitAsync>
            <h3>Add new filter pack</h3>
            <DataAnnotationsValidator />
            <div class="form-inputs">
                <label>
                    Filter pack name:
                    <InputText @bind-Value=@editModel.Name placeholder="..." />
                </label>
                <div style="display: flex; flex-direction: row;  gap: 10px; justify-content: space-between;">
                    <label>
                        Filter pack source (only GitHub repos are supported currently):
                        <InputText @bind-Value=@editModel.Source placeholder="https://github.com/user/repo" />
                    </label>
                    <div>-- OR --</div>
                    <label style="flex-grow:1;">
                        Add from a zip file by drag and dropping, or clicking here to select a file
                        <InputFile OnChange=@HandleFileChange accept=".zip" class="upload" />
                        <ValidationMessage For=@(() => editModel.FileAttachment) />
                    </label>
                </div>
                <p>@_dub</p>
            </div>

            @if (!string.IsNullOrWhiteSpace(_warning))
            {
                <p style="color: orangered">
                    @_warning
                </p>
            }
            <ValidationSummary />
            <div class="form-buttons">
                @if (!EditContext.GetValidationMessages().Any())
                {
                    <button type="submit">Add filter package</button>
                }
                else
                {
                    <button type="submit" disabled>Add filter package</button>
                }
                <button @onclick=@HandleClearForm>Clear form</button>
            </div>
        </EditForm>
    }
</Acrylic>
